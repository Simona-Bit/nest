代码1：
思路：
1.字符--->整数
2.判断二进制整数中 1 的个数：让其每一位与对应的位数为1的数字相与，如果为1则计数器+1
3.判断计数器值是否为偶数，为偶数则最高位（第八位）置1，完成奇校验
4.整数换为二进制输出（字符串拼接）
import java.util.*; 
public class Main{
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        while(in.hasNext()) {
            String s=in.nextLine();
            for (int i=0;i<s.length();i++){
                int ch=s.charAt(i);
                if (c(ch)%2==0){ //若1的个数为偶数 
                    ch+=128;
                }
                System.out.println(num(ch));
            }
        }
    }
    public static int c(int n){//判断二进制整数中 1 的个数
        int count=0;
        int b=1;
        for (int i=0;i<8;i++){ 
            if ((n & b)==b){
                count++;
            }
            b=(b<<1);
        }
        return count;
    }
    public static String num(int n){//整数换为二进制输出
        int b=128;
        StringBuilder string=new StringBuilder();
        for (int i=0;i<8;i++){
            if ((n & b)==b){
                string.append("1");
            }else{ 
                string.append("0");
            }
            b=(b>>>1);
        }
        return string.toString();
    }
}

代码2：
import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            String str = in.nextLine();
            jiCheck(str.toCharArray());
        }
    }
    public static void jiCheck(char[] s){
        int[] result = new int[8];
        for(int i = 0; i < s.length; i++){
            int oneNum = 0;
            int one = 0x01;
            int index = 7;
            while(index > 0){
                result[index] = ((s[i] & one) == 0) ? 0 : 1;
                if(result[index] == 1) oneNum++;
                one <<= 1;
                index--;
            }
            if(oneNum % 2 == 0) result[0] = 1;
            for(int k = 0; k < 8; k++){
                System.out.print(result[k]);
            }
            System.out.println();
            result[0] = 0;//update
        }
    }
}