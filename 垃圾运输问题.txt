%（各个垃圾站的位置坐标） 
clear
x=[3 1 5 4 3 0 7 9 10 14 17 14 12 10 19 2 6 11 15 7 17 21 27 15 15 20 21 24 25 28 5 22 25 9 9 30 0];
y=[2 5 4 7 11 8 9 6 2 0 3 6 9 12 9 16 18 17 12 14 16 0 9 19 14 17 13 20 16 18 12 5 7 20 15 12 0];
t=[1.50 1.50 0.55 1.20 1.3 0.85 1.20 2.30 1.40 1.50 1.10 2.70 1.80 1.80 1.4 1.50 0.80 1.50 0.80 0.6 1.3 1.80 1.40 1.60 1.60 1.00 2.00 1.00 2.10 1.20 1.90 1.2 1.60 1.20 1.50 1.30 0.00]; i=1:37; a=1:37;
plot(x,y,'*r') for ii=1:37
k=int2str(ii); k=strcat('P',k); text(x(ii),y(ii),k); end
%（运输车的调度） 
clear
x=[3 1 5 4 3 0 7 9 10 14 17 14 12 10 19 2 6 11 15 7 17 21 27 15 15 20 21 24 25 28 5 22 25 9 9 30 0];
y=[2 5 4 7 11 8 9 6 2 0 3 6 9 12 9 16 18 17 12 14 16 0 9 19 14 17 13 20 16 18 12 5 7 20 15 12 0];
t=[1.50 1.50 0.55 1.20 1.3 0.85 1.20 2.30 1.40 1.50 1.10 2.70 1.80 1.80 1.4 1.50 0.80 1.50 0.80 0.6 1.3 1.80 1.40 1.60 1.60 1.00 2.00 1.00 2.10 1.20 1.90 1.2 1.60 1.20 1.50 1.30 0.00]; i=1:37; a=1:37;
plot(x,y,'*r') for ii=1:37
k=int2str(ii); k=strcat('P',k); text(x(ii),y(ii),k);
end %描出垃圾点坐标散点图
w=[i;x;y;t;a];
w(5,:)=0; %标志位置零
jg=zeros(11,11); %记录矩阵
for i=1:20 %假定需要20条路线
sum=0; %sum记录垃圾点的垃圾量 j1=1; s=0;
m=37; %当前点指示符
i3=37;
for j=1:36
if(w(2,j)+w(3,j)>s&w(5,j)==0) s=w(2,j)+w(3,j); jg(i,j1)=w(1,j); sum=w(4,j);
m=j; %记录每条路线中最远点的点号 
else continue; 
end 
end
w(5,m)=1; %标志位置1，表示已到过该点
j1=j1+1; %记录矩阵移至所在行的下一个元素，以记录下一个所到的点
while 1 js=0; q=40;
for k=1:36
if(q>w(2,m)-w(2,k)+w(3,m)-w(3,k))&w(2,m)>w(2,k)&w(3,m)>w(3,k)&(6-sum)>w(4,k)&w(5,k)==0 %寻找距离当前点最近的点，找到的点是否是在当前点左下方, 垃圾车是否装满以及
到过该点
q=w(2,m)+w(3,m)-w(2,k)-w(3,k); js=1;
jg(i,j1)=w(1,k);
i3=k %记录距离当前点最近点的点号 else continue; end end
w(5,i3)=1; %标志位置1，到过该点 sum=sum+w(4,i3);
j1=j1+1;
m=i3;
if(w(2,i3)==0&w(3,i3)==0|js==0) %判断是否车已回到原点或已搜索完毕
break end end end
kcost=0; %空载费用 zcost=0; %满载费用 allcost=0; %总费用 n=0;
for u1=1:11 for u2=1:11
if jg(u1,u2)~=0 n=jg(u1,u2); else continue end
zcost=zcost+w(4,n)*1.8*(w(2,n)+w(3,n)); end
n=jg(u1,1);
kcost=kcost+0.4*(w(2,n)+w(3,n)); end
allcost=zcost+kcost zcost kcost i=1:11; time=[i]; time(1,:)=0; n1=0; n2=0; n3=0;
for u4=1:11 for u5=1:11
if jg(u4,u5)~=0 n1=jg(u4,u5); n2=n2+1; else continue end end
n3=jg(u4,1);
time(1,u4)=((w(2,n3)+w(3,n3))*2)/40; end n2
time
jg
%计算结果：
allcost = 2.3454e+003 zcost = 2.2134e+003 kcost =132
time =2.3000 2.2000 2.1000 1.7000 1.4500 1.4000 1.3500 1.1000 1.0500 1.0000 0.8500 jg =
30 29 27 3 0 0 0 0 0 0 0 28 26 21 25 6 0 0 0 0 0 0 36 23 33 32 0 0 0 0 0 0 0 24 18 35 20 0 0 0 0 0 0 0 34 17 16 2 0 0 0 0 0 0 0 15 11 10 0 0 0 0 0 0 0 0 19 13 8 0 0 0 0 0 0 0 0 14 7 4 1 0 0 0 0 0 0 0 22 0 0 0 0 0 0 0 0 0 0 12 9 0 0 0 0 0 0 0 0 0 31 5 0 0 0 0 0 0 0 0 0

